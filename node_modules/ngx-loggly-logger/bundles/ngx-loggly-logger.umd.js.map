{
  "version": 3,
  "file": "ngx-loggly-logger.umd.js",
  "sources": [
    "ng://ngx-loggly-logger/out/index.ts",
    "ng://ngx-loggly-logger/out/loggly.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LogglyService } from './loggly.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nexport * from './loggly.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  exports: []\n})\nexport class NgxLogglyModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxLogglyModule,\n      providers: [LogglyService]\n    };\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Cookie } from 'ng2-cookies';\n\n@Injectable()\nexport class LogglyService {\n  private LOGGLY_INPUT_PREFIX: any;\n  private LOGGLY_COLLECTOR_DOMAIN: any;\n  private LOGGLY_SESSION_KEY: any;\n  private LOGGLY_SESSION_KEY_LENGTH: any;\n  private LOGGLY_PROXY_DOMAIN: any;\n  private session_id: any;\n  private inputUrl: any;\n\n  constructor(private _http: HttpClient) {\n      this.LOGGLY_INPUT_PREFIX = 'http' + ( ('https:' === document.location.protocol ? 's' : '') ) + '://';\n      this.LOGGLY_COLLECTOR_DOMAIN = 'logs-01.loggly.com';\n      this.LOGGLY_SESSION_KEY = 'logglytrackingsession';\n      this.LOGGLY_SESSION_KEY_LENGTH = this.LOGGLY_SESSION_KEY + 1;\n      this.LOGGLY_PROXY_DOMAIN = 'loggly';\n  }\n\n    uuid() {\n        // lifted from here -> http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    setKey(tracker: any, key: any) {\n        tracker.key = key;\n        tracker.setSession();\n        this.setInputUrl(tracker);\n    }\n\n    setTag(tracker: any, tag: any) {\n        tracker.tag = tag;\n    }\n\n    setDomainProxy(tracker: any, useDomainProxy: any) {\n        tracker.useDomainProxy = useDomainProxy;\n        // refresh inputUrl value\n        this.setInputUrl(tracker);\n    }\n\n    setSendConsoleError(tracker: any, sendConsoleErrors: any) {\n        tracker.sendConsoleErrors = sendConsoleErrors;\n\n        if (tracker.sendConsoleErrors === true) {\n            let _onerror = window.onerror;\n            // send console error messages to Loggly\n            window.onerror = function (msg, url, line, col) {\n                tracker.push({\n                    category: 'BrowserJsException',\n                    exception: {\n                        message: msg,\n                        url: url,\n                        lineno: line,\n                        colno: col,\n                    }\n                });\n\n                if (_onerror && typeof _onerror === 'function') {\n                    _onerror.apply(window, arguments);\n                }\n            };\n        }\n    }\n\n    setInputUrl(tracker: any) {\n        if (tracker.useDomainProxy === true) {\n            tracker.inputUrl = this.LOGGLY_INPUT_PREFIX\n                + window.location.host\n                + '/'\n                + this.LOGGLY_PROXY_DOMAIN\n                + '/inputs/'\n                + tracker.key\n                + '/tag/'\n                + tracker.tag;\n        } else {\n            tracker.inputUrl = this.LOGGLY_INPUT_PREFIX\n                + (tracker.logglyCollectorDomain || this.LOGGLY_COLLECTOR_DOMAIN)\n                + '/inputs/'\n                + tracker.key\n                + '/tag/'\n                + tracker.tag;\n        }\n    }\n\n    setSession(session_id: any) {\n        if (session_id) {\n            this.session_id = session_id;\n            this.setCookie(this.session_id);\n        } else if (!this.session_id) {\n            this.session_id = this.readCookie();\n            if (!this.session_id) {\n                this.session_id = this.uuid();\n                this.setCookie(this.session_id);\n            }\n        }\n    }\n\n    push(data: any) {\n        let type = typeof data;\n\n        if (!data || !(type === 'object' || type === 'string')) {\n            return;\n        }\n\n        let self: any = this;\n\n\n        if (type === 'string') {\n            data = {\n                'text': data\n            };\n        } else {\n            if (data.logglyCollectorDomain) {\n                self.logglyCollectorDomain = data.logglyCollectorDomain;\n                return;\n            }\n\n            if (data.sendConsoleErrors !== undefined) {\n                this.setSendConsoleError(self, data.sendConsoleErrors);\n            }\n\n            if (data.tag) {\n                this.setTag(self, data.tag);\n            }\n\n            if (data.useDomainProxy) {\n                this.setDomainProxy(self, data.useDomainProxy);\n            }\n\n            if (data.logglyKey) {\n                this.setKey(self, data.logglyKey);\n                return;\n            }\n\n            if (data.session_id) {\n                self.setSession(data.session_id);\n                return;\n            }\n        }\n\n        if (!self.key) {\n            return;\n        }\n\n        self.track(data).subscribe(\n            (response: any) => {\n                // Success\n            },\n            (error: any) => {\n                console.error(error);\n            });\n    }\n\n    track(data: any) {\n        // inject session id\n        data.sessionId = this.session_id;\n        return this._http.post<any>(this.inputUrl, data, { headers: new HttpHeaders().set('Content-Type', 'text/plain') });\n    }\n\n    readCookie(): any {\n        let cookie = Cookie.get(this.LOGGLY_SESSION_KEY);\n        if (cookie) {\n            let i = cookie.indexOf(this.LOGGLY_SESSION_KEY);\n            if (i < 0) {\n                return false;\n            } else {\n                let end = cookie.indexOf(';', i + 1);\n                end = end < 0 ? cookie.length : end;\n                return cookie.slice(i + this.LOGGLY_SESSION_KEY_LENGTH, end);\n            }\n        } else {\n            return false;\n        }\n    }\n\n    setCookie(value: any) {\n        Cookie.set(this.LOGGLY_SESSION_KEY, value);\n    }\n}\n"
  ],
  "names": [
    "HttpClientModule",
    "CommonModule",
    "NgModule",
    "HttpClient",
    "Injectable",
    "Cookie",
    "HttpHeaders"
  ],
  "mappings": "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"
}
