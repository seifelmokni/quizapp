{
  "version": 3,
  "file": "ngx-loggly-logger.umd.min.js",
  "sources": [
    "ng://ngx-loggly-logger/out/loggly.service.ts",
    "ng://ngx-loggly-logger/out/index.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Cookie } from 'ng2-cookies';\n\n@Injectable()\nexport class LogglyService {\n  private LOGGLY_INPUT_PREFIX: any;\n  private LOGGLY_COLLECTOR_DOMAIN: any;\n  private LOGGLY_SESSION_KEY: any;\n  private LOGGLY_SESSION_KEY_LENGTH: any;\n  private LOGGLY_PROXY_DOMAIN: any;\n  private session_id: any;\n  private inputUrl: any;\n\n  constructor(private _http: HttpClient) {\n      this.LOGGLY_INPUT_PREFIX = 'http' + ( ('https:' === document.location.protocol ? 's' : '') ) + '://';\n      this.LOGGLY_COLLECTOR_DOMAIN = 'logs-01.loggly.com';\n      this.LOGGLY_SESSION_KEY = 'logglytrackingsession';\n      this.LOGGLY_SESSION_KEY_LENGTH = this.LOGGLY_SESSION_KEY + 1;\n      this.LOGGLY_PROXY_DOMAIN = 'loggly';\n  }\n\n    uuid() {\n        // lifted from here -> http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    setKey(tracker: any, key: any) {\n        tracker.key = key;\n        tracker.setSession();\n        this.setInputUrl(tracker);\n    }\n\n    setTag(tracker: any, tag: any) {\n        tracker.tag = tag;\n    }\n\n    setDomainProxy(tracker: any, useDomainProxy: any) {\n        tracker.useDomainProxy = useDomainProxy;\n        // refresh inputUrl value\n        this.setInputUrl(tracker);\n    }\n\n    setSendConsoleError(tracker: any, sendConsoleErrors: any) {\n        tracker.sendConsoleErrors = sendConsoleErrors;\n\n        if (tracker.sendConsoleErrors === true) {\n            let _onerror = window.onerror;\n            // send console error messages to Loggly\n            window.onerror = function (msg, url, line, col) {\n                tracker.push({\n                    category: 'BrowserJsException',\n                    exception: {\n                        message: msg,\n                        url: url,\n                        lineno: line,\n                        colno: col,\n                    }\n                });\n\n                if (_onerror && typeof _onerror === 'function') {\n                    _onerror.apply(window, arguments);\n                }\n            };\n        }\n    }\n\n    setInputUrl(tracker: any) {\n        if (tracker.useDomainProxy === true) {\n            tracker.inputUrl = this.LOGGLY_INPUT_PREFIX\n                + window.location.host\n                + '/'\n                + this.LOGGLY_PROXY_DOMAIN\n                + '/inputs/'\n                + tracker.key\n                + '/tag/'\n                + tracker.tag;\n        } else {\n            tracker.inputUrl = this.LOGGLY_INPUT_PREFIX\n                + (tracker.logglyCollectorDomain || this.LOGGLY_COLLECTOR_DOMAIN)\n                + '/inputs/'\n                + tracker.key\n                + '/tag/'\n                + tracker.tag;\n        }\n    }\n\n    setSession(session_id: any) {\n        if (session_id) {\n            this.session_id = session_id;\n            this.setCookie(this.session_id);\n        } else if (!this.session_id) {\n            this.session_id = this.readCookie();\n            if (!this.session_id) {\n                this.session_id = this.uuid();\n                this.setCookie(this.session_id);\n            }\n        }\n    }\n\n    push(data: any) {\n        let type = typeof data;\n\n        if (!data || !(type === 'object' || type === 'string')) {\n            return;\n        }\n\n        let self: any = this;\n\n\n        if (type === 'string') {\n            data = {\n                'text': data\n            };\n        } else {\n            if (data.logglyCollectorDomain) {\n                self.logglyCollectorDomain = data.logglyCollectorDomain;\n                return;\n            }\n\n            if (data.sendConsoleErrors !== undefined) {\n                this.setSendConsoleError(self, data.sendConsoleErrors);\n            }\n\n            if (data.tag) {\n                this.setTag(self, data.tag);\n            }\n\n            if (data.useDomainProxy) {\n                this.setDomainProxy(self, data.useDomainProxy);\n            }\n\n            if (data.logglyKey) {\n                this.setKey(self, data.logglyKey);\n                return;\n            }\n\n            if (data.session_id) {\n                self.setSession(data.session_id);\n                return;\n            }\n        }\n\n        if (!self.key) {\n            return;\n        }\n\n        self.track(data).subscribe(\n            (response: any) => {\n                // Success\n            },\n            (error: any) => {\n                console.error(error);\n            });\n    }\n\n    track(data: any) {\n        // inject session id\n        data.sessionId = this.session_id;\n        return this._http.post<any>(this.inputUrl, data, { headers: new HttpHeaders().set('Content-Type', 'text/plain') });\n    }\n\n    readCookie(): any {\n        let cookie = Cookie.get(this.LOGGLY_SESSION_KEY);\n        if (cookie) {\n            let i = cookie.indexOf(this.LOGGLY_SESSION_KEY);\n            if (i < 0) {\n                return false;\n            } else {\n                let end = cookie.indexOf(';', i + 1);\n                end = end < 0 ? cookie.length : end;\n                return cookie.slice(i + this.LOGGLY_SESSION_KEY_LENGTH, end);\n            }\n        } else {\n            return false;\n        }\n    }\n\n    setCookie(value: any) {\n        Cookie.set(this.LOGGLY_SESSION_KEY, value);\n    }\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LogglyService } from './loggly.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nexport * from './loggly.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  exports: []\n})\nexport class NgxLogglyModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxLogglyModule,\n      providers: [LogglyService]\n    };\n  }\n}\n"
  ],
  "names": [
    "LogglyService",
    "_http",
    "this",
    "LOGGLY_INPUT_PREFIX",
    "document",
    "location",
    "protocol",
    "LOGGLY_COLLECTOR_DOMAIN",
    "LOGGLY_SESSION_KEY",
    "LOGGLY_SESSION_KEY_LENGTH",
    "LOGGLY_PROXY_DOMAIN",
    "prototype",
    "uuid",
    "replace",
    "c",
    "r",
    "Math",
    "random",
    "toString",
    "setKey",
    "tracker",
    "key",
    "setSession",
    "setInputUrl",
    "setTag",
    "tag",
    "setDomainProxy",
    "useDomainProxy",
    "setSendConsoleError",
    "sendConsoleErrors",
    "_onerror_1",
    "window",
    "onerror",
    "msg",
    "url",
    "line",
    "col",
    "push",
    "category",
    "exception",
    "message",
    "lineno",
    "colno",
    "apply",
    "arguments",
    "inputUrl",
    "host",
    "logglyCollectorDomain",
    "session_id",
    "setCookie",
    "readCookie",
    "data",
    "type",
    "self",
    "text",
    "undefined",
    "logglyKey",
    "track",
    "subscribe",
    "response",
    "error",
    "console",
    "sessionId",
    "post",
    "headers",
    "HttpHeaders",
    "set",
    "cookie",
    "Cookie",
    "get",
    "i",
    "indexOf",
    "end",
    "length",
    "slice",
    "value",
    "Injectable",
    "HttpClient",
    "NgxLogglyModule",
    "forRoot",
    "ngModule",
    "providers",
    "NgModule",
    "args",
    "imports",
    "CommonModule",
    "HttpClientModule",
    "declarations",
    "exports"
  ],
  "mappings": "qcAAA,IAAAA,EAAA,WAeE,SAAFA,EAAsBC,GAAAC,KAAtBD,MAAsBA,EAChBC,KAAKC,oBAAsB,QAAY,WAAaC,SAASC,SAASC,SAAW,IAAM,IAAQ,MAC/FJ,KAAKK,wBAA0B,qBAC/BL,KAAKM,mBAAqB,wBAC1BN,KAAKO,0BAA4BP,KAAKM,mBAAqB,EAC3DN,KAAKQ,oBAAsB,gBAG7BV,EAAJW,UAAAC,KAAI,WAEI,MAAO,uCAAuCC,QAAQ,QAAS,SAAUC,GACrE,IAAIC,EAAoB,GAAhBC,KAAKC,SAAgB,EAC7B,OAD0C,MAANH,EAAYC,EAAS,EAAJA,EAAU,GACtDG,SAAS,OAI1BlB,EAAJW,UAAAQ,OAAI,SAAOC,EAAcC,GACjBD,EAAQC,IAAMA,EACdD,EAAQE,aACRpB,KAAKqB,YAAYH,IAGrBpB,EAAJW,UAAAa,OAAI,SAAOJ,EAAcK,GACjBL,EAAQK,IAAMA,GAGlBzB,EAAJW,UAAAe,eAAI,SAAeN,EAAcO,GACzBP,EAAQO,eAAiBA,EAEzBzB,KAAKqB,YAAYH,IAGrBpB,EAAJW,UAAAiB,oBAAI,SAAoBR,EAAcS,GAG9B,GAFAT,EAAQS,kBAAoBA,GAEM,IAA9BT,EAAQS,kBAA4B,CACpC,IAAIC,EAAWC,OAAOC,QAEtBD,OAAOC,QAAU,SAAUC,EAAKC,EAAKC,EAAMC,GACvChB,EAAQiB,KAAK,CACTC,SAAU,qBACVC,UAAW,CACPC,QAASP,EACTC,IAAKA,EACLO,OAAQN,EACRO,MAAON,KAIXN,GAAgC,mBAAbA,GACnBA,EAASa,MAAMZ,OAAQa,cAMvC5C,EAAJW,UAAAY,YAAI,SAAYH,IACuB,IAA3BA,EAAQO,eACRP,EAAQyB,SAAW3C,KAAKC,oBAClB4B,OAAO1B,SAASyC,KAChB,IACA5C,KAAKQ,oBACL,WACAU,EAAQC,IACR,QACAD,EAAQK,IAEdL,EAAQyB,SAAW3C,KAAKC,qBACjBiB,EAAQ2B,uBAAyB7C,KAAKK,yBACvC,WACAa,EAAQC,IACR,QACAD,EAAQK,KAItBzB,EAAJW,UAAAW,WAAI,SAAW0B,GACHA,GACA9C,KAAK8C,WAAaA,EAClB9C,KAAK+C,UAAU/C,KAAK8C,aACZ9C,KAAK8C,aACb9C,KAAK8C,WAAa9C,KAAKgD,aAClBhD,KAAK8C,aACN9C,KAAK8C,WAAa9C,KAAKU,OACvBV,KAAK+C,UAAU/C,KAAK8C,eAKhChD,EAAJW,UAAA0B,KAAI,SAAKc,GACD,IAAIC,SAAcD,EAElB,GAAKA,IAAmB,WAATC,GAA8B,WAATA,GAApC,CAIA,IAAIC,EAAYnD,KAGhB,GAAa,WAATkD,EACAD,EAAO,CACHG,KAAQH,OAET,CACH,GAAIA,EAAKJ,sBAEL,YADAM,EAAKN,sBAAwBI,EAAKJ,uBAgBtC,GAZII,EAAKtB,oBAAsB0B,WAC3BrD,KAAK0B,oBAAoByB,EAAMF,EAAKtB,mBAGpCsB,EAAK1B,KACLvB,KAAKsB,OAAO6B,EAAMF,EAAK1B,KAGvB0B,EAAKxB,gBACLzB,KAAKwB,eAAe2B,EAAMF,EAAKxB,gBAG/BwB,EAAKK,UAEL,YADAtD,KAAKiB,OAAOkC,EAAMF,EAAKK,WAI3B,GAAIL,EAAKH,WAEL,YADAK,EAAK/B,WAAW6B,EAAKH,YAKxBK,EAAKhC,KAIVgC,EAAKI,MAAMN,GAAMO,UACb,SAACC,KAGD,SAACC,GACGC,QAAQD,MAAMA,OAI1B5D,EAAJW,UAAA8C,MAAI,SAAMN,GAGF,OADAA,EAAKW,UAAY5D,KAAK8C,WACf9C,KAAKD,MAAM8D,KAAU7D,KAAK2C,SAAUM,EAAM,CAAEa,SAAS,IAAIC,EAAAA,aAAcC,IAAI,eAAgB,iBAGtGlE,EAAJW,UAAAuC,WAAI,WACI,IAAIiB,EAASC,EAAAA,OAAOC,IAAInE,KAAKM,oBAC7B,GAAI2D,EAAQ,CACR,IAAIG,EAAIH,EAAOI,QAAQrE,KAAKM,oBAC5B,GAAI8D,EAAI,EACJ,OAAO,EAEP,IAAIE,EAAML,EAAOI,QAAQ,IAAKD,EAAI,GAElC,OADAE,EAAMA,EAAM,EAAIL,EAAOM,OAASD,EACzBL,EAAOO,MAAMJ,EAAIpE,KAAKO,0BAA2B+D,GAG5D,OAAO,GAIfxE,EAAJW,UAAAsC,UAAI,SAAU0B,GACNP,EAAAA,OAAOF,IAAIhE,KAAKM,mBAAoBmE,MAvL5C,iBAKA,CAAAvB,KAACwB,EAAAA,gDAHD,CAAAxB,KAASyB,EAAAA,cCFT,IAAAC,EAAA,WAAA,SAAAA,YAgBSA,EAATC,QAAE,WACE,MAAO,CACLC,SAAUF,EACVG,UAAW,CAACjF,OAnBlB,iBAOA,CAAAoD,KAAC8B,EAAAA,SAADC,KAAA,CAAU,CACRC,QAAS,CACPC,EAAAA,aACAC,EAAAA,kBAEFC,aAAc,GACdC,QAAS"
}
